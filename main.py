from telethon import TelegramClient
from functions import *
from config import API_ID, API_HASH, USER_NAME
from json_classes import ChatNames

client = TelegramClient(USER_NAME, API_ID, API_HASH)
test_chat_name = "@golangl"


async def main():
    # info
    me = await client.get_me()
    all_info = me.stringify()
    # await client.send_message('me', all_info)

    # username = me.username
    # phone = me.phone
    # print(username)
    # print(phone)
    # await client.send_message('me', username)
    # await client.send_message('me', phone)

    # You can print all the dialogs/conversations that you are part of:
    # async for dialog in client.iter_dialogs():
    #     print(dialog.name, 'has ID', dialog.id)

    # —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # await client.send_message('@bizAdamdar777', 'üò≥')

    # message = await client.send_message(
    #     'me',
    #     '–¢—É—Ç —Å—Ç–∏–ª–∏ –æ—Ç –º–∞—Ä–∫–¥–æ—É–Ω **–∂–∏—Ä–Ω—ã–π**, `–∫–æ–¥`, __–∫—É—Ä—Å–∏–≤__ –∏ [url —Å–∞–π—Ç–∞](https://google.com)!',
    #     link_preview=False
    # )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è?
    # print(message.raw_text)

    # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –Ω–µ–≥–æ –º–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é?
    # await message.reply('Cool!')

    # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤
    # await client.send_file('me', 'promo_photo.jpg')

    # –ü—Ä–æ–∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞:
    # async for message in client.iter_messages('me'):
    #     print(message.id, message.text)
    #
    #     # –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    #     # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å, –∫—É–¥–∞ —Ñ–æ—Ç–æ –±—ã–ª–æ —Å–∫–∞—á–∞–Ω–æ
    #     if message.photo:
    #         path = await message.download_media()
    #         print('File saved to', path)  # printed after download is done

    chats = ChatNames.get_data_by_category("enter and exit")
    await join_to_many_chats(client, chats)

    # await leave_chat(client, test_chat_name)


if __name__ == "__main__":
    with client:
        client.loop.run_until_complete(main())
